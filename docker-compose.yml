version: '3.8'

services:
  # SAGE ADK Agent
  agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sage-adk-agent
    ports:
      - "8080:8080"
      - "9090:9090"  # Metrics
    environment:
      - ADK_AGENT_NAME=docker-agent
      - ADK_SERVER_PORT=8080
      - ADK_PROTOCOL_MODE=auto
      - A2A_STORAGE_TYPE=redis
      - A2A_REDIS_URL=redis://redis:6379
      - LLM_PROVIDER=openai
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      - METRICS_ENABLED=true
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - adk-network
    restart: unless-stopped
    volumes:
      - ./config.yaml:/app/config.yaml:ro

  # Redis for storage
  redis:
    image: redis:7-alpine
    container_name: sage-adk-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - adk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # PostgreSQL (optional, alternative to Redis)
  postgres:
    image: postgres:16-alpine
    container_name: sage-adk-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: adk
      POSTGRES_USER: adk_user
      POSTGRES_PASSWORD: adk_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - adk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adk_user"]
      interval: 10s
      timeout: 3s
      retries: 3
    profiles:
      - postgres

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: sage-adk-prometheus
    ports:
      - "9091:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - adk-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: sage-adk-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - adk-network
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  adk-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:
