# IMPORTANT: This is a template. DO NOT commit actual secrets to git.
# Use Kubernetes secrets, Sealed Secrets, or external secret management (Vault, AWS Secrets Manager, etc.)

# Option 1: Manual creation (not recommended for production)
# kubectl create secret generic sage-agent-secrets \
#   --from-literal=openai-api-key=sk-... \
#   --from-literal=anthropic-api-key=sk-ant-... \
#   --from-literal=postgres-user=sage \
#   --from-literal=postgres-password=... \
#   --from-literal=database-url=postgresql://...

# Option 2: Using YAML (base64 encoded)
apiVersion: v1
kind: Secret
metadata:
  name: sage-agent-secrets
  namespace: sage-system
  labels:
    app: sage-agent
type: Opaque
data:
  # Base64 encoded values (echo -n 'value' | base64)
  # REPLACE WITH ACTUAL VALUES
  openai-api-key: c2stLi4u                    # sk-...
  anthropic-api-key: c2stYW50LWFwaS0uLi4=      # sk-ant-api-...
  gemini-api-key: QUl6YVN5Li4u                # AIzaSy...
  postgres-user: c2FnZQ==                     # sage
  postgres-password: Y2hhbmdlbWU=             # changeme
  database-url: cG9zdGdyZXNxbDovL...          # postgresql://...
  redis-password: Y2hhbmdlbWU=                # changeme

---
# Option 3: Using Sealed Secrets (recommended)
# apiVersion: bitnami.com/v1alpha1
# kind: SealedSecret
# metadata:
#   name: sage-agent-secrets
#   namespace: sage-system
# spec:
#   encryptedData:
#     openai-api-key: AgB... (encrypted)
#     postgres-password: AgB... (encrypted)

---
# Option 4: Using External Secrets Operator (recommended for production)
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: sage-agent-secrets
#   namespace: sage-system
# spec:
#   refreshInterval: 1h
#   secretStoreRef:
#     name: aws-secrets-manager
#     kind: SecretStore
#   target:
#     name: sage-agent-secrets
#     creationPolicy: Owner
#   data:
#   - secretKey: openai-api-key
#     remoteRef:
#       key: prod/sage-agent/openai-api-key
#   - secretKey: postgres-password
#     remoteRef:
#       key: prod/sage-agent/postgres-password

---
# TLS Certificate Secret
apiVersion: v1
kind: Secret
metadata:
  name: sage-agent-tls
  namespace: sage-system
  labels:
    app: sage-agent
type: kubernetes.io/tls
data:
  # REPLACE WITH ACTUAL CERTIFICATE
  tls.crt: LS0tLS1CRUdJTi... # base64 encoded certificate
  tls.key: LS0tLS1CRUdJTi... # base64 encoded private key
